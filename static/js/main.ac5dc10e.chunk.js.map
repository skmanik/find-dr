{"version":3,"sources":["utils/API.js","components/Search/Search.js","components/GoogleMap/GoogleMap.js","App.js","index.js"],"names":["API","getDoctor","query","url","queryArray","toUpperCase","split","length","Promise","resolve","reject","axios","get","then","result","data","catch","error","Search","state","input","onInput","event","_this","setState","target","value","onSearch","preventDefault","doctor","address","recipient_primary_business_street_address_line1","recipient_city","recipient_state","recipient_zip_code","recipient_country","props","foundDoctor","err","alert","react_default","a","createElement","className","type","placeholder","onChange","this","onClick","Component","GoogleMap","markerPosition","lat","lng","updateMarkerPosition","window","google","maps","Geocoder","geocode","results","status","position","geometry","location","_map","map","setCenter","console","log","prevProps","_this2","dist","zoom","gestureHandling","initialCenter","ref","title","name","GoogleApiWrapper","apiKey","App","doctorAddress","components_Search_Search","components_GoogleMap_GoogleMap","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.ac5dc10e.chunk.js","sourcesContent":["import axios from 'axios';\n\nexport default {\n\tgetDoctor: function(query) {\n\t\tconst queryString = query.toUpperCase();\n\t\tconst queryArray = queryString.split(' ');\n\t\tlet url;\n\n\t\tif (queryArray.length === 3) {\n\t\t\turl = 'https://openpaymentsdata.cms.gov/resource/a3k9-9uq3.json?physician_first_name=' + queryArray[0] + '&physician_middle_name=' + queryArray[1] + '&physician_last_name=' + queryArray[2];\n\t\t} else if (queryArray.length === 2) {\n\t\t\turl = 'https://openpaymentsdata.cms.gov/resource/a3k9-9uq3.json?physician_first_name=' + queryArray[0] + '&physician_last_name=' + queryArray[1];\n\t\t} else {\n\t\t\turl = 'https://openpaymentsdata.cms.gov/resource/a3k9-9uq3.json?physician_last_name=' + queryArray[0];\n\t\t}\n\n\t\treturn new Promise((resolve, reject) => {\n\t\t\taxios.get(url).then((result) => {\n\t\t\t\tresolve(result.data[0]);\n\t\t\t}).catch((error) => {\n\t\t\t\treject(error);\n\t\t\t});\n\t\t});\n\t}\n}","import React, { Component } from 'react';\nimport API from '../../utils/API';\n\nclass Search extends Component {\n\tstate = {\n\t\tinput: \"\",\n\t};\n\n\t// input change handler\n\tonInput = event => this.setState({\n\t\tinput: event.target.value\n\t});\n\n\t// submit handler\n\tonSearch = event => {\n\t\tevent.preventDefault();\n\t\tif (this.state.input === \"\" || this.state.input === null || this.state.input === \"undefined\") {\n\t\t\treturn;\n\t\t}\n\n\t\t// do API stuff\n\t\tAPI.getDoctor(this.state.input)\n\t\t\t.then((doctor) => {\n\t\t\t\tlet address = '';\n\t\t\t\taddress = \n\t\t\t\t\tdoctor.recipient_primary_business_street_address_line1 + \" \" + \n\t\t\t\t\tdoctor.recipient_city + \" \" + doctor.recipient_state + \" \" +\n\t\t\t\t\tdoctor.recipient_zip_code + \" \" + doctor.recipient_country;\n\n\t\t\t\tthis.props.foundDoctor(address);\n\t\t\t})\n\t\t\t.catch((err) => {\n\t\t\t\talert(\"Could not find a doctor with that name!\");\n\t\t\t});\n\t};\n\n\trender() {\n\t\treturn(\n\t\t\t<div>\n\t\t\t\t<div className=\"field\">\n\t\t\t\t\t<h1 className=\"subtitle is-6\">Enter name space separated: <em>First Middle Last</em></h1>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"field has-addons\">\n\t\t\t\t  <div className=\"control\">\n\t\t\t\t    <input className=\"input\" type=\"text\" placeholder=\"John Jacob Jingleheimer\" onChange={this.onInput} />\n\t\t\t\t  </div>\n\t\t\t\t  <div className=\"control\">\n\t\t\t\t    <a className=\"button is-info\" onClick={this.onSearch}>\n\t\t\t\t      Submit\n\t\t\t\t    </a>\n\t\t\t\t  </div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Search;","import React, { Component } from 'react';\nimport {Map, Marker, GoogleApiWrapper} from 'google-maps-react';\nimport API from '../../utils/API';\n\nclass GoogleMap extends Component {\n\tstate = {\n\t\tmarkerPosition: { lat: 39.8283, lng: -98.5795 }\n\t};\n\n\tcomponentDidUpdate(prevProps) {\n\t\tif (this.props.address !== prevProps.address) {\n\t\t\tthis.updateMarkerPosition(this.props.address);\n\t\t}\n\t}\n\n\tupdateMarkerPosition = address => {\n\t\tlet geocoder = new window.google.maps.Geocoder();\n\n      \tgeocoder.geocode({ 'address': address }, (results, status) => {\n\t      if (status == 'OK') {\n\t      \tconst position = {\n\t      \t\tlat: results[0].geometry.location.lat(),\n\t      \t\tlng: results[0].geometry.location.lng()\n\t      \t}\n\n\t      \tthis.setState({ markerPosition: position });\n\t      \tthis._map.map.setCenter(position);\n\t      \tconsole.log(results[0].geometry.location.lat(), results[0].geometry.location.lng());\n\t      } else {\n\t        console.log('Geocode was not successful for the following reason:', status);\n\t      }\n      \t});\n\t}\n\n\trender() {\n\t\treturn(\n\t\t\t<Map google={this.props.google} zoom={6} gestureHandling={'none'} initialCenter={this.state.markerPosition} ref={map => (this._map = map)}>\n\t\t\t\t<Marker title={\"Doctor's location\"} name={\"Doctor\"} position={this.state.markerPosition} />\n\t\t\t</Map>\n\t\t);\n\t}\n}\n\nexport default GoogleApiWrapper({\n\tapiKey: 'AIzaSyAeRU5lU2MMAfjOMvLjjVtDWEerfwldkwM'\n})(GoogleMap);","import React, { Component } from 'react';\nimport Search from './components/Search';\nimport GoogleMap from './components/GoogleMap';\nimport './App.css';\n\nclass App extends Component {\n  state = {\n    address: \"Center of map. Please enter a doctor's name.\",\n  }\n\n  foundDoctor = doctorAddress => {\n    this.setState({ address: doctorAddress });\n  }\n\n  render() {\n    return (\n      <div>\n        <section className=\"hero is-medium is-primary is-bold\">\n          <div className=\"hero-body\">\n            <div className=\"container\">\n              <h1 className=\"title\">Find a doctor</h1>\n              <Search foundDoctor={this.foundDoctor} />\n              <h1 className=\"subtitle is-6 address-updater\">Current address: <strong>{this.state.address}</strong></h1>\n            </div>\n          </div>\n        </section>\n        <GoogleMap address={this.state.address} />\n      </div>\n    );\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}